/*
Usage:
	@include element('sidebar'){
		background-color: $graybg;
	}
	@include element('col'){
		background-color: $gray1;

		@include modifier('primary') {
			padding: 10px;
			//background-color: blue;

			@include respond('desktop') {
			//	background-color: green;
			}
			@include respond('tablet') {
			//	background-color:lime;
			}
		}

		@include modifier('secondary') {
			background-color: $white;
			@include respond('desktop') {
				//background-color: green;
			}
			@include respond('tablet') {
				//background-color:$white;
			}
		}
	}
@author Jonnie Spratley
*/
$breakpoints: ( 'xsmall': ( min-width: 320px ), 'small': ( min-width: 400px ), 'mobile': ( min-width: 321px ), 'tablet': ( min-width: 768px ), 'desktop': ( min-width: 992px ), 'large': ( min-width: 1200px ) ) !default;
///For Demo
.demo {
  .box div {
    min-height: 150px;
    text-align: center;
    vertical-align: middle;
  }
  .c1 {
    //color: #ddd;
    background-color: rgba(1,1,1, 0.2);
  }
  .c2 {
    //	color: #ddd;
    //	background-color: rgba(1,1,1, 0.1);
  }
  .c3 {
    //color: #333;
    background-color: rgba(1,1,1, 0.4);
  }
  .c4 {
    color: #333;
    background-color: #7c7c84;
    background-color: rgba(1,1,1, 0.3);
  }
  .c5 {
    color: #333;
    background-color: rgba(1,1,1, 0.2);
  }
  .c6 {
    color: #333;
    background-color: rgba(138, 140, 142, .50);
  }
}
///-----------------------
/// Mixins
/// Centerer mixin to center object on screen.
/// @param {Boolean} $horizontal - Align horizontal
/// @param {Boolean} $vertical - Align vertical
/// @access public
@mixin centerer($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  }
  @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}
$elementSeparator: '__';
$modifierSeparator: '--';
@function containsModifier($selector) {
  $selector: selectorToString($selector);
  @if str-index($selector, $modifierSeparator) {
    @return true;
  }
  @else {
    @return false;
  }
}
@function selectorToString($selector) {
  $selector: inspect($selector); //cast to string
  $selector: str-slice($selector, 2, -2); //remove brackets
  @return $selector;
}
@function getBlock($selector) {
  $selector: selectorToString($selector);
  $modifierStart: str-index($selector, $modifierSeparator) - 1;
  @return str-slice($selector, 0, $modifierStart);
}
@mixin b($block) {
  .#{$block} {
    @content;
  }
}
@mixin e($element) {
  $selector: &;
  @if containsModifier($selector) {
    $block: getBlock($selector);
    @at-root {
      #{$selector} {
        #{$block+$elementSeparator+$element} {
          @content;
        }
      }
    }
  }
  @else {
    @at-root {
      #{$selector+$elementSeparator+$element} {
        @content;
      }
    }
  }
}
@mixin m($modifier) {
  @at-root {
    #{&}#{$modifierSeparator+$modifier} {
      @content;
    }
  }
}
@mixin modifier($modifier) {
  @include m($modifier) {
    @content;
  }
}
@mixin element($element) {
  @include e($element) {
    @content;
  }
}
@mixin block($block) {
  @include b($block) {
    @content;
  }
}
@mixin respond($media) {
  @if $media == mobile {
    @media (min-width: 320px) {
      @content;
    }
  }
  @else if $media == tablet {
    @media (min-width: 768px) {
      @content;
    }
  }
  @else if $media == desktop {
    @media (min-width: 1200px) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$media}`. " + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
///-----------------------
/// Vars
//GE Brand Colors Light
$black-light: #222;
$red-light: rgb(255,92,92);
$blue-light: rgb(54,147,248);
$green-light: rgb(117,216,53);
$purple-light: rgb(156,151,255);
$orange-light: rgb(255,187,102);
$yellow-light: rgb(255,249,141);
$gray-light: #D3D3D3;
$pink-light: #FFB6C1;
$brown-light: #D2B48C;
///GE Brand Colors Dark
$red-dark: rgb(182,18,37);
$blue-dark: rgb(0,54,110);
$green-dark: rgb(29,95,17);
$pink-dark: rgb(182,18,37);
$purple-dark: rgb(89,81,148);
$orange-dark: rgb(229,92,0);
$yellow-dark: rgb(255,207,69);
//Monochromatic
$black: rgb(0,0,0);
$gray10: rgb(36,35,38);
$gray9: rgb(59,59,63);
$gray8: rgb(82,81,86);
$gray7: rgb(124,124,132);
$gray6: rgb(153,153,163);
$gray5: rgb(177,177,188);
$gray4: rgb(209,208,216);
$gray3: rgb(228,228,234);
$gray2: rgb(239,239,244);
$gray1: rgb(247,247,252);
$white: rgb(255,255,255);
$graybg: rgb(139,141,143);
$primary: rgb(62,135,232);
$primary-hover: rgb(53,115,197);
$primary-pressed: rgb(43,94,162);
$select-default: rgb(10,158,193);
$select-hover: rgb(9,134,164);
.splitview__col {
  @include modifier('is-passive') {
    //background: red;
  }
  @include modifier('is-active') {
    //	background: lime;
  }
}
*,
html,
body {
  font-size: 1.1rem;
  position: relative;
}
.img-responsive {
  min-width: 100% !important;
  max-height: 400px;
}
///-----------------------------------------
/// Navbar
.navbar {
  z-index: 15;
  background-color: $white;
  color: $black;
  padding: 2px 8px;
  height: 56px;
  line-height: 56px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  box-shadow: 0 2px 2px rgba(0,0,0, .2);
  .btn {
    margin: 2px 5px;
  }
  .brand {
    text-decoration: none;
    color: $black;
  }
}
.app {
  .brand {
    @include centerer();
  }
  margin-top: 65px;
  min-width: 300px;
  background-color: $gray10;
  position: relative;
  height: 100vh;
  display: flex;
  flex-direction: column;
  //Button Fixes
  .btn.btn--icon {
    background-color: transparent;
    border: none;
    box-shadow: none;
  }
  //List ui fixes
  .list-ui.no-border {
    border: none;
    li {
      border: none;
    }
  }
  .box {
    //border: none;
    background: $white;
    //margin: 10px;
    box-shadow: 1px 2px 2px rgba(0,0,0,.1);
    header {
      display: block;
      border-bottom: 1px solid $gray6;
      margin-bottom: 0.5rem;
      h3,
      h4 {
        margin: 0;
      }
    }
  }
}
.splitview__view {
  //display: none;
  //opacity: .2;
  background-color: lime;
  &:last-child {
    //display:block;
    opacity: 1;
  }
  &:target {
    //display: block;
    opacity: 1;
    background-color: red;
  }
}
main > * {
  display: none;
}
main > *:last-child {
  display: block;
}
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
main > *:target {
  display: block;
  animation: pulse 0.5s linear 1;
}
main > *:target ~ * {
  display: none;
}
.cards {
  display: flex;
  flex-direction: row;
  @include respond('mobile') {
    flex-direction: column;
  }
  .card {
    min-height: 100px;
    margin: 8px;
    border-radius: 4px;
    border: none;
    box-shadow: 1px 2px 2px rgba(0,0,0,.2);
    width: 100%;
  }
}
.list-ui {
  @include modifier('nav') {
    border: none;
    li {
      cursor: pointer;
      color: $white;
      border-bottom: 1px solid rgba(0,0,0,.5);
      user-select: none;
      &.selected,
      &:active,
      &:hover {
        background-color: $select-hover;
        //	border-bottom-color: $white;
      }
      a {
        text-decoration: none;
        color: $white;
      }
    }
    @include modifier('subnav') {
      border: none;
    }
  }
}
/// -----------------------------------------------
/// Splitview
/// -----------------------------------------------
/// Vars
$split-view-transition: all 0.3s ease;
$split-view-sidebar-width: 25%;
$split-view-right-width: 25%;
$split-view-breakcrumbs-box-shadow: 0 2px 2px rgba(0,0,0, .2);
$split-view-breadcrumbs-transition: all 300ms ease-in;
$split-view-col-background-color: #fff;
/// -----------------------------------------------
@include block('splitview') {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
  @include modifier('sidebar-right-is-present') {}
  @include modifier('sidebar-left-is-present') {}
  @include element('primary') {}
  .splitview-sidebar-right-present {}
  .splitview-sidebar-left-present {}
  .splitview-hide-splitScreen {}
  .splitview-hide-fullScreen {
    @include respond('desktop') {
      display: none;
    }
  }
  .splitview-hide-primary {}
  .splitview-hide-secondary {}
  .splitview-hide {
    display: none!important;
  }
  ///--------------------------------------------
  /// Buttons
  .btn {
    &.btn--bare {
      background-color: transparent !important;
      border: none !important;
    }
  }
  ///--------------------------------------------
  /// Breadcrumbs
  @include element('breadcrumbs') {
    //display: flex;
    background-color: $white;
    transition: $split-view-breadcrumbs-transition;
    position: absolute;
    box-shadow: $split-view-breakcrumbs-box-shadow;
    width: 100%;
    @include modifier('is-passive') {
      transform: translateY(-130%);
      z-index: 0;
    }
    @include modifier('is-active') {
      height: auto;
      transform: translateY(0);
      //opacity: 1;
      z-index: 14;
    }
  }
  ///--------------------------------------------
  /// Container
  @include element('container') {
    display: flex;
    height: 100%;
  }
  ///--------------------------------------------
  /// Column
  @include element('col') {
    padding: 0;
    margin: 0;
    height: 100%;
    display: inline;
    position: absolute;
    width: 100%;
    transition: $split-view-transition;
    background-color: $split-view-col-background-color;
    overflow-x: auto;
    @include modifier('is-passive') {
      width: 0;
      //transform: translateX(99%);
      opacity: 0;
    }
    @include modifier('is-active') {
      width: auto;
      opacity: 1;
      @include element('primary') {
        width: 100%;
      }
    }
    ///--------------------------------------------
    /// Primary
    @include element('primary') {
      right: 0;
      @include respond('desktop') {
        display: inline;
        position: absolute;
        right: 16%;
        width: 40%;
      }
      @include respond('tablet') {
        position: absolute;
        width: 59%;
        opacity: 1;
      }
    }
    ///--------------------------------
    /// Secondary
    @include element('secondary') {
      left: 0;
      display: flex;
      width: 100%;
      flex-direction: column;
      //Desktop
      @include respond('desktop') {
        position: absolute;
        left: 16%;
        width: 27%;
      }
      //Tablet
      @include respond('tablet') {
        position: absolute;
        width: 40%;
        opacity: 1;
      }
    }
  }
  ///--------------------------------------------
  /// Sidebar
  @include element('sidebar') {
    height: 100%;
    height: 100vh;
    display: inline;
    position: absolute;
    width: $split-view-sidebar-width;
    transition: $split-view-transition;
    will-change: translate;
    z-index: auto;
    padding: 0;
    margin: 0;
    @include modifier('left') {
      //top:0;
      left: 0;
    }
    @include modifier('right') {
      right: 0;
    }
    @include modifier('is-closed') {
      opacity: 0;
      width: 0;
      z-index: -1;
    }
    @include modifier('is-opened') {
      opacity: 1;
      width: 330px !important;
      z-index: 1001;
      + div {
        transform: translateX(330px);
      }
      @include respond('tablet') {
        width: 25%;
      }
      @include respond('mobile') {
        width: 100%;
      }
    }
    @include respond('desktop') {
      opacity: 1 !important;
      width: 15% !important;
    }
  }
  ///-----------------------------------------
  /// Toolbar
  @include element('toolbar') {
    z-index: 15;
    background-color: $gray9;
    color: $white;
    padding: 2px 8px;
    min-height: 56px;
    line-height: 56px;
  }
}
.splitview-hide {
  display: inherit;
  @include respond('desktop') {
    display: none!important;
  }
}
.splitview-hide-splitScreen {
  display: none!important;
}